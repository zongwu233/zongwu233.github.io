<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title></title>
        <link>https%3A//blog.zongwu233.xyz</link>
        <description></description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https%3A//blog.zongwu233.xyz/tags/openstack/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Sun, 16 Aug 2020 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>OpenStack 管理</title>
                <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
                <link>https%3A//blog.zongwu233.xyz/openstack-management/</link>
                <guid>https%3A//blog.zongwu233.xyz/openstack-management/</guid>
                <description>&lt;h2 id=&quot;pei-zhi-wai-bu-wang-luo&quot;&gt;配置外部网络&lt;&#x2F;h2&gt;
&lt;p&gt;前提，本机双网卡，用于管理地址的 IP 地址为10.0.0.104，用于联网的 IP 地址为 192.168.1.100。&lt;&#x2F;p&gt;
&lt;p&gt;在后台管理界面进入 管理员 -&amp;gt; 网络 -&amp;gt; 网络&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;Ll4b3aZ7BNrUmwA.png&quot; alt=&quot;external_net_1.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;选择 新建网络，名称填写 external ，项目选择 admin ，供应商网络类型 选择 Flat，物理网络填写 physnet1，勾选 共享的，外部网络。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;lG2QUuISFhC8NsO.png&quot; alt=&quot;external_net_2.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;对于物理网络名称，不能填错，具体名称可以通过以下步骤查看。&lt;&#x2F;p&gt;
&lt;p&gt;在本机执行以下命令进入 neutron docker 容器&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;docker exec -it neutron_server  bash

#查看
cat &#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;ml2_conf.ini 

[ml2_type_flat]
flat_networks = physnet1
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;点击下一项，创建子网。子网填写本机器所在的真实网络配置，本机ip地址 192.168.1.100。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;iglDKoTBNtAXw43.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;子网名称 ext_subnet，网络地址 192.168.1.0&#x2F;24 网关IP 192.168.1.1&lt;&#x2F;p&gt;
&lt;p&gt;点击下一项，子网详情， 分配地址池， 填写192.168.1.160,192.168.1.200 这里预留40个ip。dns服务器 填写 223.5.5.5 。最后点创建。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pei-zhi-nei-bu-wang-luo&quot;&gt;配置内部网络&lt;&#x2F;h2&gt;
&lt;p&gt;在后台管理界面进入  项目 -&amp;gt; 网络 -&amp;gt; 网络&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;2UXtKvWJbyVqFL4.png&quot; alt=&quot;normal_net_1.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;TB9KnI7MdmCgbUD.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;选择创建网络 ，填写网络名称 normal，点下一项，填写子网名称，网络地址，这里填写 172.16.0.0&#x2F;24 网关填写 172.16.0.1 。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;WYFpgAfvJGLlkBK.png&quot; alt=&quot;&quot; &#x2F;&gt;点击下一项，填写子网详情，分配地址池 填写 172.16.0.100,127.16.0.200 。dns服务器填写 223.5.5.5 。最后点创建。&lt;&#x2F;p&gt;
&lt;p&gt;然后点击 项目 -&amp;gt; 网络 -&amp;gt; 路由&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;uzRmcjpNfBoC7ks.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;创建路由，填写路由名称， 选择刚才创建的外网 external， 点击创建。&lt;&#x2F;p&gt;
&lt;p&gt;进入 项目 -&amp;gt; 网络 -&amp;gt; 网络拓扑&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;vFNLkqJPpWwBSgV.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;选择图中的路由，点击添加接口，选择子网，就是刚才创建的 normal。&lt;&#x2F;p&gt;
&lt;p&gt;到此，网络创建完毕。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-quan-zu-pei-zhi&quot;&gt;安全组配置&lt;&#x2F;h2&gt;
&lt;p&gt;进入 项目 -&amp;gt; 网络 -&amp;gt; 安全组&lt;&#x2F;p&gt;
&lt;p&gt;点击管理规则，点击添加规则&lt;&#x2F;p&gt;
&lt;p&gt;分别添加 所有ICMP的入口方向和出口方向，TCP 22端口(用于SSH)的出口方向和入口方向，TCP 53端口(用于DNS)的出口方向和入口方向，UDP 53端口(用于DNS)的出口方向和入口方向。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;Rt6qQCcOgAHsEkM.png&quot; alt=&quot;安全组&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jing-xiang-guan-li&quot;&gt;镜像管理&lt;&#x2F;h2&gt;
&lt;p&gt;镜像下载，下载地址 http:&#x2F;&#x2F;cloud.centos.org&#x2F;centos&#x2F;7&#x2F;images&#x2F;?C=M;O=D 或者阿里云 https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;centos&#x2F;&lt;&#x2F;p&gt;
&lt;p&gt;这里选择其中一个，wget http:&#x2F;&#x2F;cloud.centos.org&#x2F;centos&#x2F;7&#x2F;images&#x2F;CentOS-7-x86_64-GenericCloud.qcow2c&lt;&#x2F;p&gt;
&lt;p&gt;在本机的控制台输入&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;. &#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh

#上传镜像到glance
openstack image create &amp;quot;CentOS7-image&amp;quot; \
  --file CentOS-7-x86_64-GenericCloud.qcow2c \
  --disk-format qcow2 --container-format bare \
  --public
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;创建虚拟机规格&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;    openstack flavor create --id 1 --ram 512 --disk 1 --vcpus 1 m1.tiny 
    openstack flavor create --id 2 --ram 2048 --disk 20 --vcpus 1 m1.small
    openstack flavor create --id 3 --ram 4096 --disk 40 --vcpus 2 m1.medium
    openstack flavor create --id 4 --ram 8192 --disk 80 --vcpus 4 m1.large
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;chuang-jian-xu-ni-ji-shi-li&quot;&gt;创建虚拟机实例&lt;&#x2F;h2&gt;
&lt;p&gt;进入 项目 -&amp;gt; 计算 -&amp;gt; 实例&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;TVs8PBNpudxEAH3.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;点击创建实例，填写实例名称，镜像选择刚才创建的 CentOS7-image ，云主机类型选择 m1.medium ，网络选择normal，安全组默认是 default，不创建密钥对，在配置里面输入下面的shell&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;#!&#x2F;bin&#x2F;sh
passwd root &amp;lt;&amp;lt;EOF
123456
123456
EOF
sed -i &amp;#39;s&#x2F;PasswordAuthentication no&#x2F;PasswordAuthentication yes&#x2F;g&amp;#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config
sed -i &amp;#39;s&#x2F;#PubkeyAuthentication yes&#x2F;PubkeyAuthentication yes&#x2F;g&amp;#39;  &#x2F;etc&#x2F;ssh&#x2F;sshd_config
service ssh restart
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;该脚本会修改虚拟机实例用户 root 的密码为123456&lt;&#x2F;p&gt;
&lt;p&gt;点击创建实例。&lt;&#x2F;p&gt;
&lt;p&gt;创建成功之后， 点击该实例名称，进入控制台界面，然后登陆即可。&lt;&#x2F;p&gt;
&lt;p&gt;此时实例可访问外网，但是在局域网环境 (10.0.0.x) 无法访问该实例。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fen-pei-fu-dong-ip&quot;&gt;分配浮动IP&lt;&#x2F;h2&gt;
&lt;p&gt;进入 项目 -&amp;gt; 网络 -&amp;gt; 浮动IP&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;08&#x2F;13&#x2F;FQfsDRxlM1X7b4n.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;点击分配IP给项目，点击分配IP，则生成一个IP地址，属于 192.168.1.0&#x2F;24 网段。然后对刚刚生成的IP点击关联，关联到刚刚创建的虚拟机实例上。&lt;&#x2F;p&gt;
&lt;p&gt;可以在局域网其他机器上通过SSH登陆该虚拟机实例。&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>kolla-ansible 部署 all-in-one 模式 OpenStack stein版</title>
                <pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate>
                <link>https%3A//blog.zongwu233.xyz/kolla-ansible-deploy-all-in-one-mode-openstack-stein-version/</link>
                <guid>https%3A//blog.zongwu233.xyz/kolla-ansible-deploy-all-in-one-mode-openstack-stein-version/</guid>
                <description>&lt;h2 id=&quot;qian-qi-zhun-bei&quot;&gt;前期准备&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ji-qi-pei-zhi&quot;&gt;机器配置&lt;&#x2F;h3&gt;
&lt;p&gt;20Core  50G Memory  3.6 T Storage&lt;&#x2F;p&gt;
&lt;p&gt;双网卡，enp3s0 局域网静态ip配置，网卡作为管理后台地址，enp4s0 不要配置静态ip，可使用dhcp模式分配ip，用于后续OpenStack的虚拟机上网网卡。&lt;&#x2F;p&gt;
&lt;p&gt;注意两个网卡不要处于同一网段，采用 enp4s0 所在的网关作为本机的默认网关。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;xi-tong-huan-jing-pei-zhi&quot;&gt;系统环境配置&lt;&#x2F;h3&gt;
&lt;p&gt;系统为 centOS 7.8  python 2.7.5&lt;&#x2F;p&gt;
&lt;p&gt;关闭防火墙&#x2F;NetworkManager&#x2F;SElinux&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;systemctl stop NetworkManager firewalld

systemctl disable NetworkManager firewalld

sed -i &amp;quot;s&#x2F;SELINUX=enforcing&#x2F;SELINUX=disabled&#x2F;&amp;quot; &#x2F;etc&#x2F;selinux&#x2F;config

setenforce 0

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;ying-pan-de-kuai-cun-chu-pei-zhi&quot;&gt;硬盘的块存储配置&lt;&#x2F;h3&gt;
&lt;p&gt;这台机器的硬盘主要挂载在 &#x2F;home 下&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;cd &#x2F;home
truncate -s 2000G disk.img
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;创建了一个大小为2T的文件。采用下面这种方式创建大文件的速度太慢：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;dd if=&#x2F;dev&#x2F;zero of=.&#x2F;disk.img count=4096 bs=512MB 
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;创建文件之后，将磁盘文件虚拟成块设备&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;losetup -f

losetup &#x2F;dev&#x2F;loop0 disk.img
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;#将物理磁盘初始化为物理卷PV
pvcreate &#x2F;dev&#x2F;loop0
#创建卷组 cinder-volumes，将PV加入到VG中
vgcreate cinder-volumes &#x2F;dev&#x2F;loop0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;（注意生产环境要单独配置真正的硬盘到VG，不要采用上述挂载方式，否则机器重启导致虚拟机文件找不到）&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-zhuang&quot;&gt;安装&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;an-zhuang-docker&quot;&gt;安装 docker&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;curl -sSL https:&#x2F;&#x2F;get.docker.io | bash
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;配置共享&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d&#x2F;kolla.conf

[Service]
MountFlags=shared　　
ExecStart=
ExecStart=&#x2F;usr&#x2F;bin&#x2F;dockerd --log-opt max-file=5 --log-opt max-size=50m

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;配置加速&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;sudo mkdir -p &#x2F;etc&#x2F;docker
sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;
{
  &amp;quot;registry-mirrors&amp;quot;: [&amp;quot;https:&#x2F;&#x2F;******.mirror.aliyuncs.com&amp;quot;]
}
EOF

sudo systemctl daemon-reload
sudo systemctl restart docker

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;registry-mirrors&lt;&#x2F;code&gt; 地址可以在阿里云镜像管理自行申请。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;an-zhuang-qi-ta-yi-lai&quot;&gt;安装其他依赖&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;yum install git
yum install -y epel-release  
yum install -y python-pip 
mkdir .pip
# 更改pip软件包源
tee &#x2F;root&#x2F;.pip&#x2F;pip.conf &amp;lt;&amp;lt; &amp;#39;EOF&amp;#39;
[global]
index-url = https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple
EOF
pip install -U pip
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;an-zhuang-ansible&quot;&gt;安装ansible&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;pip install ansible
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;an-zhuang-kolla-ansible&quot;&gt;安装 kolla-ansible&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;这里要特别注意，不要按照官方文档说明，而是按照下面的操作，否则后面部署的时候，会出现各种错误导致部署失败&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;git clone https:&#x2F;&#x2F;github.com&#x2F;openstack&#x2F;kolla -b stable&#x2F;stein
git clone https:&#x2F;&#x2F;github.com&#x2F;openstack&#x2F;kolla-ansible -b stable&#x2F;stein
pip install -r kolla&#x2F;requirements.txt
pip install -r kolla-ansible&#x2F;requirements.txt
cd kolla-ansible &amp;amp;&amp;amp;  python setup.py install
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这里是采用指定源码分支，安装 kolla-ansible。&lt;&#x2F;p&gt;
&lt;p&gt;当前目录是 kolla-ansible ，执行&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;mkdir &#x2F;etc&#x2F;kolla &amp;amp;&amp;amp; cp etc&#x2F;kolla&#x2F;* &#x2F;etc&#x2F;kolla
cp ansible&#x2F;inventory&#x2F;* ~
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;生成OpenStack各服务的密码文件&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kolla-genpwd
#修改openstack管理后台的登陆密码
vim &#x2F;etc&#x2F;kolla&#x2F;passwords.yml
keystone_admin_password 123456
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;编辑 kolla的配置文件&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;vim &#x2F;etc&#x2F;kolla&#x2F;globals.yml
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;
kolla_base_distro: &amp;quot;centos&amp;quot;

#官方建议采用 source 更稳定而不是binary
kolla_install_type: &amp;quot;source&amp;quot;
# 版本
openstack_release: &amp;quot;stein&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;# Kolla options

#这里的ip 是 network_interface 网卡的ip 如果不配置，导致数据库（高可用模式）无法正常启动
kolla_internal_vip_address: &amp;quot;10.0.0.104&amp;quot;

#单机模式，关闭高可用
enable_haproxy: &amp;quot;no&amp;quot;

# Neutron - Networking Options
network_interface: &amp;quot;enp3s0&amp;quot;
neutron_external_interface: &amp;quot;enp4s0&amp;quot;

# TLS options
kolla_enable_tls_internal: &amp;quot;no&amp;quot;
kolla_enable_tls_external: &amp;quot;no&amp;quot;

# 使用cinder存储
enable_cinder: &amp;quot;yes&amp;quot;
enable_glance: &amp;quot;yes&amp;quot;
enable_magnum: &amp;quot;yes&amp;quot;
enable_heat: &amp;quot;yes&amp;quot;

# 如果使用lvm，需先创建cinder-volumes的卷组，上面已经创建过
enable_cinder_backend_lvm: &amp;quot;yes&amp;quot;
# 默认是kvm ，但是实际部署发现不生效，系统自动采用了 qemu
nova_compute_virt_type: &amp;quot;kvm&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;配置修改完成，可以拉取所有镜像，当前工作目录是 &lt;code&gt;~&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;#提前拉取依赖的镜像
kolla-ansible -i .&#x2F;all-in-one pull
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这个过程会很久，看网络情况。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bu-shu&quot;&gt;部署&lt;&#x2F;h2&gt;
&lt;p&gt;执行openstack部署需要的引导服务、部署前检查&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;# 引导服务
kolla-ansible -i .&#x2F;all-in-one bootstrap-servers 
#安装前的检查
kolla-ansible -i .&#x2F;all-in-one prechecks
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;结果都ok，可以进行部署&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kolla-ansible -i .&#x2F;all-in-one deploy
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这一步也会很久。部署完成之后，&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;kolla-ansible -i .&#x2F;all-in-one  post-deploy
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这一步会生成 &lt;code&gt;&#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh&lt;&#x2F;code&gt; 文件。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;cat &#x2F;etc&#x2F;kolla&#x2F;admin-openrc.sh　

export OS_PROJECT_DOMAIN_NAME=Default
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_NAME=admin
export OS_TENANT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=123456
export OS_AUTH_URL=http:&#x2F;&#x2F;10.0.0.104:35357&#x2F;v3
export OS_INTERFACE=internal
export OS_IDENTITY_API_VERSION=3
export OS_REGION_NAME=RegionOne
export OS_AUTH_PLUGIN=password
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;安装 openstackclient ，可以在控制台执行openstack命令&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;pip install python-openstackclient
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h2 id=&quot;guan-li&quot;&gt;管理&lt;&#x2F;h2&gt;
&lt;p&gt;在浏览器打开 http:&#x2F;&#x2F;10.0.0.104 输入 admin 账号密码即可进入。&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
